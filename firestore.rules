rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'ideas' collection
    match /ideas/{ideaId} {
      // Any authenticated user can read ideas
      allow read: if request.auth != null;
      // Only the user who created the idea can update or delete it
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      // Any authenticated user can create an idea
      allow create: if request.auth != null;
    }

    // Rules for the 'ideasVotes' collection
    match /ideasVotes/{voteId} {
        // A user can only create, read, update, or delete their own vote.
        // The voteId should be in the format 'userId_ideaId'
        allow read, write, delete: if request.auth != null && request.auth.uid == split(voteId, '_')[0];
        // Any authenticated user can create a vote, as long as the voteId starts with their uid.
        allow create: if request.auth != null && request.auth.uid == split(voteId, '_')[0];
    }

    // Rules for the 'players' collection
    match /players/{userId} {
      // Allow users to read and update their own player data
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Allow users to create their own player document
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for 'allowedEmailSuffixes'
    // Allow read for any authenticated user, but no writes.
    // This should be managed from the Firebase console.
    match /allowedEmailSuffixes/{suffix} {
        allow read: if request.auth != null;
        allow write: if false; // Disallow client-side writes
    }

    // Rules for logging collections. These are write-only from the client.
    match /failedLogins/{logId} {
        allow create: if true; // Allow anyone to write failed login attempts
        allow read, update, delete: if false;
    }

    match /successfulLogins/{logId} {
        allow create: if true; // Allow anyone to write successful login attempts
        allow read, update, delete: if false;
    }

     match /failedRegistrations/{logId} {
        allow create: if true;
        allow read, update, delete: if false;
    }
  }
}